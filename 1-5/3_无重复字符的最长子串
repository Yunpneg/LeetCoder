给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

思路: 
  1. 利用了滑动窗口. 将适合的元素存放到哈希表中, 右边界减去左边界就是窗口长度, 即最长子串长度
  2. 右边界遍历所有字符
    m[s[i]] == 0 意味着遍历的元素不在窗口中, 计算子串长度
    m[s[i]] < left 意味着遍历到了重复元素, left边界进行更新, 此时要从新计算子串长度
  3. 遇到重复元素, left进行更新, 替换为窗口中存放的重复元素对应的值.
  4. 每次循环, 都要更新哈希表中各字符对应的值

class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int left=0, res=0, m[256]={0};
        for(int i=0; i<s.size(); i++)
        {
            if(m[s[i]] == 0 || m[s[i]] < left)
            {
                //计算长度
                res = max(res, i - left + 1);
            }
            else
            {
                //更新left, 遇到了重复元素
                left = m[s[i]];
            }
            //更新哈希表中的键值,对应不同的字符
            m[s[i]] = i+1;
        }
        return res;
    }
};
