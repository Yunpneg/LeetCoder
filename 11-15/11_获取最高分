老师想知道从某某同学当中，分数最高的是多少，现在请你编程模拟老师的询问。当然，老师有时候需要更新某位同学的成绩.

输入描述:
输入包括多组测试数据。
每组输入第一行是两个正整数N和M（0 < N <= 30000,0 < M < 5000）,分别代表学生的数目和操作的数目。
学生ID编号从1编到N。
第二行包含N个整数，代表这N个学生的初始成绩，其中第i个数代表ID为i的学生的成绩
接下来又M行，每一行有一个字符C（只取‘Q’或‘U’），和两个正整数A,B,当C为'Q'的时候, 表示这是一条询问操作，他询问ID从A到B（包括A,B）的学生当中，成绩最高的是多少
当C为‘U’的时候，表示这是一条更新操作，要求把ID为A的学生的成绩更改为B。

输出描述:
对于每一次询问操作，在一行里面输出最高成绩.


输入例子1:
5 7
1 2 3 4 5
Q 1 5
U 3 6
Q 3 4
Q 4 5
U 4 5
U 2 9
Q 1 5

输出例子1:
5
6
5
9


#include <iostream>
using namespace std;
 
int grade[30000]; //定义学生的最大数目
 
//获取最大成绩值; 参数是起始位置和终点位置
int max(int x, int y)
{
	int temp;
	temp = grade[x];
	for (int i = x + 1; i <= y; i++){
		if (temp < grade[i]){
			temp = grade[i];
		}	
	}
	return temp;
}
 
int main()
{
	int N, M, A, B;
	char C;
	while (cin >> N >> M){   //循环出问题
        //输入成绩
		for (int i = 0; i < N; i++){
			cin >> grade[i];
		}
        //循环操作语句
		while (M--)
		{
			cin >> C >> A >> B;
			if (C == 'Q'){
				if (A > B)
				{
					int temp = A;
					A = B;
					B = temp;
				}
				int m = max(A - 1, B - 1); //A和B的值减去1就是他们在成绩数组中的下标
				cout << m << endl;
			}
			else if (C == 'U'){
				grade[A - 1] = B;
			}
			else{
				cout << "error" << endl;
			}
		}
	}
	return 0;
}
