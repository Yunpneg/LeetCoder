给定一个正整数，编写程序计算有多少对质数的和等于输入的这个正整数，并输出结果。输入值小于1000。
如，输入为10, 程序应该输出结果为2。（共有两对质数的和为10,分别为(5,5),(3,7)）

输入描述:
输入包括一个整数n,(3 ≤ n < 1000)

输出描述:
输出对数

输入例子1:
10

输出例子1:
2

思路:
1. 判断素数:
  -> 一个数，如果有因子的话，那么在它的平方根数以内就应该有，否则就没有因子。
  -> 所以必定有一个因子不大于m的平方根。故判断m是否为素数，只要试除到m的平方根就可以了，不必一直到m-1。
2. 判断加和是否为目标数
  -> 循环至n/2即可, 避免出现重复数字对
  -> 判断i与target - i是否同时为素数

#include <iostream>
#include <cmath>
using namespace std;

//判断素数
bool isPrime(int n)
{
    for(int i=2; i<=sqrt(n); i++)
    {
        if(n % i == 0)
        {
            return false;
        }
    }
    return true;
}

int main()
{
    int n;
    int flag = 0;
    while(cin >> n)
    {
        for(int i=2; i<=n/2; i++)
        {
            if(isPrime(i) && isPrime(n-i))
            {
                flag++;
            }
        }
        cout << flag << endl;
    }
    return 0;
}
