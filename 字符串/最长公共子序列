利用了动态规划




#include <iostream>
#include <string>
using namespace std;
#define MAXSIZE 100

int dp[MAXSIZE][MAXSIZE];
int flag[MAXSIZE][MAXSIZE];
string strA;
string strB;

//输出子序列
void PrintLCS(int i,int j)
{
    if(i==0||j==0)
        return ;
    if(flag[i][j]== 1)
    {
        PrintLCS(i-1,j-1);
        cout<<strA[i-1];
    }
    else if(flag[i][j]== 0)
        PrintLCS(i-1,j);
    else
        PrintLCS(i,j-1);
}

int main()
{
    int i;
    int j;
    getline(cin, strA);
    getline(cin, strB);
    int lenA = (int)strA.size();
    int lenB = (int)strB.size();
    
    for (i=1; i<=lenA; i++)
    {
        for (j=1; j<=lenB; j++)
        {
            if (strA[i-1] == strB[j-1])
            {
                dp[i][j] = dp[i-1][j-1] + 1;
                flag[i][j] = 1;
            }
            else
            {
                if(dp[i-1][j] >= dp[i][j-1])
                {
                    dp[i][j] = dp[i-1][j];
                    flag[i][j] = 0;
                }
                else
                {
                    dp[i][j] = dp[i][j-1];
                    flag[i][j] = -1;
                }
            }
            
        }
    }
    PrintLCS(lenA, lenB);
    cout << dp[lenA][lenB] << endl;
    return 0;
}
