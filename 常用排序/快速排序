快速排序

首先选一个轴值(pivot，也有叫基准的)，将待排序记录划分成独立的两部分，左侧的元素均小于轴值，右侧的元素均大于或等于轴值，
然后对这两部分再重复，直到整个序列有序

过程:
  把长度为n的输入序列分成两个长度为n/2的子序列；
  对这两个子序列分别采用归并排序；
  将两个排序好的子序列合并成一个最终的排序序列。
  
  

#include <iostream>
#include <vector>
using namespace std;

void sortAl(vector<int> &vec, int start, int end)
{
    int i=start, j=end;
    int temp = vec[i];
    if(i<j)
    {
        while(i<j)
        {
            while(i<j && vec[j] >= temp)
            {
                j--;
            }
            if(i<j)
            {
                vec[i++] = vec[j];
            }
            while(i<j && vec[i] < temp)
            {
                i++;
            }
            //说明vec[i] > temp, 交换将vec[i]移到temp右侧
            if(i<j)
            {
                vec[j--] = vec[i];
            }
        }
        vec[i] = temp;
        //递归
        sortAl(vec, start, i-1);
        sortAl(vec, i+1, end);
        
    }
}
