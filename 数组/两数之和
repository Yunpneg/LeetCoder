给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。
你可以假设每种输入只会对应一个答案。但是，你不能重复利用这个数组中同样的元素。

思路: 利用map哈希表

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        
        //map是STL的一个关联容器，它提供一对一的数据处理能力
        //其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个为该关键字的值）
        map<int, int> a; //提供一对一的哈希表
        vector<int> b(2, -1); //用来承载结果，初始化一个含2个整型变量，初始值为-1的容器b
        int x,t=0;
        for(int i=0; i<nums.size(); i++){
            //使用map.count，返回的是被查找元素的个数。如果有，返回1；否则，返回0。
            //注意，map中不存在相同元素，所以返回值只能是1或0
        
            if(a.count(target-nums[i])>0){
                b[0] = a[target - nums[i]]; //得到的是值对应的下标, 存放到容器b中
                b[1] = i;
                break;
            }
            a[nums[i]] = i; //将i和nums[i]防入map中，用来获取结果下标
           
        }
        return b;
    };
};
