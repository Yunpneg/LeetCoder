假设按照升序排序的数组在预先未知的某个点上进行了旋转。

( 例如，数组 [0,0,1,2,2,5,6] 可能变为 [2,5,6,0,0,1,2] )。

编写一个函数来判断给定的目标值是否存在于数组中。若存在返回 true，否则返回 false。



class Solution {
public:
    bool search(vector<int>& nums, int target) 
    {
        int left=0, right = nums.size()-1;
        
        while(left <= right)
        {
            int mid = left + (right - left)/2;
            if(nums[mid] == target)
                return true;
            //排除最左值, 中值, 最右值相等的情况(因为存在重复元素)
            if(nums[mid] == nums[left] && nums[mid] ==nums[right])
                left++;
            
            else if(nums[mid] <= nums[right])
            {
                //target在右子数组
                if(nums[mid] <target && target <=nums[right])
                    left = mid+1;
                //target不在右子数组, 缩小范围
                else
                    right = mid-1;
            }
            else
            {
                if(nums[left] <= target && target < nums[mid])
                    right = mid-1;
                else
                    left = mid+1;
            }
        }
        return false;
    }
};
